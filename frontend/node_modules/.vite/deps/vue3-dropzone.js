import {
  __awaiter,
  __generator,
  __spread,
  init_tslib_es6
} from "./chunk-QNGMTW6Z.js";
import {
  require_vue
} from "./chunk-YK36MZVV.js";
import "./chunk-TYUBDKXE.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-AC2VUBZ6.js";

// node_modules/file-selector/dist/es5/file.js
function toFileWithPath(file, path) {
  var f = withMimeType(file);
  if (typeof f.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
var COMMON_MIME_TYPES;
var init_file = __esm({
  "node_modules/file-selector/dist/es5/file.js"() {
    COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
      ["avi", "video/avi"],
      ["gif", "image/gif"],
      ["ico", "image/x-icon"],
      ["jpeg", "image/jpeg"],
      ["jpg", "image/jpeg"],
      ["mkv", "video/x-matroska"],
      ["mov", "video/quicktime"],
      ["mp4", "video/mp4"],
      ["pdf", "application/pdf"],
      ["png", "image/png"],
      ["zip", "application/zip"],
      ["doc", "application/msword"],
      ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
    ]);
  }
});

// node_modules/file-selector/dist/es5/file-selector.js
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt)];
    });
  });
}
function isDragEvt(value) {
  return !!value.dataTransfer;
}
function getInputFiles(evt) {
  var files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];
  return files.map(function(file) {
    return toFileWithPath(file);
  });
}
function isInput(value) {
  return value !== null;
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  var files = [];
  for (var i = 0; i < items.length; i++) {
    var file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}
var FILES_TO_IGNORE;
var init_file_selector = __esm({
  "node_modules/file-selector/dist/es5/file-selector.js"() {
    init_tslib_es6();
    init_file();
    FILES_TO_IGNORE = [
      // Thumbnail cache files for macOS and Windows
      ".DS_Store",
      "Thumbs.db"
      // Windows
    ];
  }
});

// node_modules/file-selector/dist/es5/index.js
var es5_exports = {};
__export(es5_exports, {
  fromEvent: () => fromEvent
});
var init_es5 = __esm({
  "node_modules/file-selector/dist/es5/index.js"() {
    init_file_selector();
  }
});

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/vue3-dropzone/dist/index.common.js
var require_index_common = __commonJS({
  "node_modules/vue3-dropzone/dist/index.common.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var e = require_vue();
    var n = (init_es5(), __toCommonJS(es5_exports));
    function t(e2) {
      return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
    }
    var r = t(require_es());
    var o = function() {
      return (o = Object.assign || function(e2) {
        for (var n2, t2 = 1, r2 = arguments.length; t2 < r2; t2++)
          for (var o2 in n2 = arguments[t2])
            Object.prototype.hasOwnProperty.call(n2, o2) && (e2[o2] = n2[o2]);
        return e2;
      }).apply(this, arguments);
    };
    function i(e2, n2) {
      var t2 = {};
      for (var r2 in e2)
        Object.prototype.hasOwnProperty.call(e2, r2) && n2.indexOf(r2) < 0 && (t2[r2] = e2[r2]);
      if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
        var o2 = 0;
        for (r2 = Object.getOwnPropertySymbols(e2); o2 < r2.length; o2++)
          n2.indexOf(r2[o2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r2[o2]) && (t2[r2[o2]] = e2[r2[o2]]);
      }
      return t2;
    }
    function a(e2, n2, t2, r2) {
      return new (t2 || (t2 = Promise))(function(o2, i2) {
        function a2(e3) {
          try {
            l2(r2.next(e3));
          } catch (e4) {
            i2(e4);
          }
        }
        function u2(e3) {
          try {
            l2(r2.throw(e3));
          } catch (e4) {
            i2(e4);
          }
        }
        function l2(e3) {
          var n3;
          e3.done ? o2(e3.value) : (n3 = e3.value, n3 instanceof t2 ? n3 : new t2(function(e4) {
            e4(n3);
          })).then(a2, u2);
        }
        l2((r2 = r2.apply(e2, n2 || [])).next());
      });
    }
    function u(e2, n2) {
      var t2, r2, o2, i2, a2 = { label: 0, sent: function() {
        if (1 & o2[0])
          throw o2[1];
        return o2[1];
      }, trys: [], ops: [] };
      return i2 = { next: u2(0), throw: u2(1), return: u2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
        return this;
      }), i2;
      function u2(i3) {
        return function(u3) {
          return function(i4) {
            if (t2)
              throw new TypeError("Generator is already executing.");
            for (; a2; )
              try {
                if (t2 = 1, r2 && (o2 = 2 & i4[0] ? r2.return : i4[0] ? r2.throw || ((o2 = r2.return) && o2.call(r2), 0) : r2.next) && !(o2 = o2.call(r2, i4[1])).done)
                  return o2;
                switch (r2 = 0, o2 && (i4 = [2 & i4[0], o2.value]), i4[0]) {
                  case 0:
                  case 1:
                    o2 = i4;
                    break;
                  case 4:
                    return a2.label++, { value: i4[1], done: false };
                  case 5:
                    a2.label++, r2 = i4[1], i4 = [0];
                    continue;
                  case 7:
                    i4 = a2.ops.pop(), a2.trys.pop();
                    continue;
                  default:
                    if (!(o2 = a2.trys, (o2 = o2.length > 0 && o2[o2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                      a2 = 0;
                      continue;
                    }
                    if (3 === i4[0] && (!o2 || i4[1] > o2[0] && i4[1] < o2[3])) {
                      a2.label = i4[1];
                      break;
                    }
                    if (6 === i4[0] && a2.label < o2[1]) {
                      a2.label = o2[1], o2 = i4;
                      break;
                    }
                    if (o2 && a2.label < o2[2]) {
                      a2.label = o2[2], a2.ops.push(i4);
                      break;
                    }
                    o2[2] && a2.ops.pop(), a2.trys.pop();
                    continue;
                }
                i4 = n2.call(e2, a2);
              } catch (e3) {
                i4 = [6, e3], r2 = 0;
              } finally {
                t2 = o2 = 0;
              }
            if (5 & i4[0])
              throw i4[1];
            return { value: i4[0] ? i4[1] : void 0, done: true };
          }([i3, u3]);
        };
      }
    }
    function l(e2, n2) {
      for (var t2 = 0, r2 = n2.length, o2 = e2.length; t2 < r2; t2++, o2++)
        e2[o2] = n2[t2];
      return e2;
    }
    function c(e2) {
      e2.preventDefault();
    }
    function s(e2) {
      return e2.dataTransfer ? Array.prototype.some.call(e2.dataTransfer.types, function(e3) {
        return "Files" === e3 || "application/x-moz-file" === e3;
      }) : !!e2.target && !!e2.target.files;
    }
    function f(e2) {
      return "function" == typeof e2.isPropagationStopped ? e2.isPropagationStopped() : void 0 !== e2.cancelBubble && e2.cancelBubble;
    }
    var v = { code: "too-many-files", message: "Too many files" };
    var p = function(e2) {
      return e2 = Array.isArray(e2) && 1 === e2.length ? e2[0] : e2, { code: "file-invalid-type", message: "File type must be " + (Array.isArray(e2) ? "one of " + e2.join(", ") : e2) };
    };
    function g(e2) {
      return null != e2;
    }
    function d(e2, n2) {
      var t2 = "application/x-moz-file" === e2.type || r.default(e2, n2);
      return [t2, t2 ? null : p(n2)];
    }
    var D = function(e2) {
      return { code: "file-too-large", message: "File is larger than " + e2 + " bytes" };
    };
    var y = function(e2) {
      return { code: "file-too-small", message: "File is smaller than " + e2 + " bytes" };
    };
    function m(e2, n2, t2) {
      if (g(e2.size) && e2.size)
        if (g(n2) && g(t2)) {
          if (e2.size > t2)
            return [false, D(t2)];
          if (e2.size < n2)
            return [false, y(n2)];
        } else {
          if (g(n2) && e2.size < n2)
            return [false, y(n2)];
          if (g(t2) && e2.size > t2)
            return [false, D(t2)];
        }
      return [true, null];
    }
    function b() {
      for (var e2 = [], n2 = 0; n2 < arguments.length; n2++)
        e2[n2] = arguments[n2];
      return function(n3) {
        for (var t2 = [], r2 = 1; r2 < arguments.length; r2++)
          t2[r2 - 1] = arguments[r2];
        return e2.some(function(e3) {
          return !f(n3) && e3 && e3.apply(void 0, l([n3], t2)), f(n3);
        });
      };
    }
    var h = { disabled: false, getFilesFromEvent: n.fromEvent, maxSize: 1 / 0, minSize: 0, multiple: true, maxFiles: 0, preventDropOnDocument: true, noClick: false, noKeyboard: false, noDrag: false, noDragEventsBubbling: false };
    function F(e2, n2) {
      switch (n2.type) {
        case "focus":
          return o(o({}, e2), { isFocused: true });
        case "blur":
          return o(o({}, e2), { isFocused: false });
        case "openDialog":
          return o(o({}, e2), { isFileDialogActive: true });
        case "closeDialog":
          return o(o({}, e2), { isFileDialogActive: false });
        case "setDraggedFiles":
          var t2 = n2.isDragActive, r2 = n2.draggedFiles;
          return o(o({}, e2), { draggedFiles: r2, isDragActive: t2 });
        case "setFiles":
          return o(o({}, e2), { acceptedFiles: n2.acceptedFiles, fileRejections: n2.fileRejections });
        case "reset":
          return o(o({}, e2), { isFileDialogActive: false, isDragActive: false, draggedFiles: [], acceptedFiles: [], fileRejections: [] });
        default:
          return e2;
      }
    }
    exports.useDropzone = function(n2) {
      void 0 === n2 && (n2 = {});
      var t2 = e.ref(o(o({}, h), n2));
      e.watch(function() {
        return o({}, n2);
      }, function(e2) {
        t2.value = o(o({}, t2.value), e2);
      });
      var r2 = e.ref(), p2 = e.ref(), g2 = function(n3, t3, r3) {
        var o2 = e.reactive(t3), i2 = function(t4) {
          var r4 = n3(e.toRaw(o2), t4);
          Object.keys(r4).forEach(function(e2) {
            o2[e2] = r4[e2];
          });
        };
        return null != r3 && i2(r3), [o2, i2];
      }(F, { isFocused: false, isFileDialogActive: false, isDragActive: false, isDragAccept: false, isDragReject: false, draggedFiles: [], acceptedFiles: [], fileRejections: [] }), D2 = g2[0], y2 = g2[1], w = function() {
        p2.value && (y2({ type: "openDialog" }), p2.value.value = "", p2.value.click());
      }, E = function() {
        var e2 = t2.value.onFileDialogCancel;
        D2.isFileDialogActive && setTimeout(function() {
          if (p2.value) {
            var n3 = p2.value.files;
            n3 && !n3.length && (y2({ type: "closeDialog" }), "function" == typeof e2 && e2());
          }
        }, 300);
      };
      function x(e2) {
        r2.value && ((r2.value.$el || r2.value).isEqualNode(e2.target) && (32 !== e2.keyCode && 13 !== e2.keyCode || (e2.preventDefault(), w())));
      }
      function O() {
        y2({ type: "focus" });
      }
      function A() {
        y2({ type: "blur" });
      }
      function z() {
        var e2;
        t2.value.noClick || (void 0 === e2 && (e2 = window.navigator.userAgent), function(e3) {
          return e3.includes("MSIE") || e3.includes("Trident/");
        }(e2) || function(e3) {
          return e3.includes("Edge/");
        }(e2) ? setTimeout(w, 0) : w());
      }
      var j = e.ref([]), S = function(e2) {
        r2.value && ((r2.value.$el || r2.value).contains(e2.target) || (e2.preventDefault(), j.value = []));
      };
      function k(e2) {
        t2.value.noDragEventsBubbling && e2.stopPropagation();
      }
      function C(e2) {
        return a(this, void 0, void 0, function() {
          var n3, r3, o2, i2, a2;
          return u(this, function(u2) {
            switch (u2.label) {
              case 0:
                return n3 = t2.value, r3 = n3.getFilesFromEvent, o2 = n3.noDragEventsBubbling, i2 = n3.onDragEnter, e2.preventDefault(), k(e2), j.value = l(l([], j.value), [e2.target]), s(e2) ? r3 ? [4, r3(e2)] : [2] : [3, 2];
              case 1:
                if ((a2 = u2.sent()) || (a2 = []), f(e2) && !o2)
                  return [2];
                y2({ draggedFiles: a2, isDragActive: true, type: "setDraggedFiles" }), i2 && i2(e2), u2.label = 2;
              case 2:
                return [2];
            }
          });
        });
      }
      function P(e2) {
        var n3 = t2.value.onDragOver;
        if (e2.preventDefault(), k(e2), e2.dataTransfer)
          try {
            e2.dataTransfer.dropEffect = "copy";
          } catch (e3) {
          }
        return s(e2) && n3 && n3(e2), false;
      }
      function R(e2) {
        e2.preventDefault(), k(e2);
        var n3 = j.value.filter(function(e3) {
          return !!r2.value && (r2.value.$el || r2.value).contains(e3);
        }), o2 = n3.indexOf(e2.target);
        if (-1 !== o2 && n3.splice(o2, 1), j.value = n3, !(n3.length > 0)) {
          y2({ isDragActive: false, type: "setDraggedFiles", draggedFiles: [] });
          var i2 = t2.value.onDragLeave;
          s(e2) && i2 && i2(e2);
        }
      }
      function B(e2) {
        e2.preventDefault(), k(e2), j.value = [];
        var n3 = t2.value, r3 = n3.getFilesFromEvent, o2 = n3.noDragEventsBubbling, i2 = n3.accept, a2 = n3.minSize, u2 = n3.maxSize, l2 = n3.multiple, c2 = n3.maxFiles, p3 = n3.onDrop, g3 = n3.onDropRejected, D3 = n3.onDropAccepted;
        if (s(e2)) {
          if (!r3)
            return;
          Promise.resolve(r3(e2)).then(function(n4) {
            if (!f(e2) || o2) {
              var t3 = [], r4 = [];
              n4.forEach(function(e3) {
                var n5 = d(e3, i2), o3 = n5[0], l3 = n5[1], c3 = m(e3, a2, u2), s2 = c3[0], f2 = c3[1];
                if (o3 && s2)
                  t3.push(e3);
                else {
                  var v2 = [l3, f2].filter(function(e4) {
                    return e4;
                  });
                  r4.push({ file: e3, errors: v2 });
                }
              }), (!l2 && t3.length > 1 || l2 && c2 >= 1 && t3.length > c2) && (t3.forEach(function(e3) {
                r4.push({ file: e3, errors: [v] });
              }), t3.splice(0)), y2({ acceptedFiles: t3, fileRejections: r4, type: "setFiles" }), p3 && p3(t3, r4, e2), r4.length > 0 && g3 && g3(r4, e2), t3.length > 0 && D3 && D3(t3, e2);
            }
          });
        }
        y2({ type: "reset" });
      }
      e.onMounted(function() {
        window.addEventListener("focus", E, false), t2.value.preventDropOnDocument && (document.addEventListener("dragover", c, false), document.addEventListener("drop", S, false));
      }), e.onUnmounted(function() {
        window.removeEventListener("focus", E, false), t2.value.preventDropOnDocument && (document.removeEventListener("dragover", c), document.removeEventListener("drop", S));
      });
      var L = function(e2) {
        return t2.value.disabled ? void 0 : e2;
      }, T = function(e2) {
        return t2.value.noKeyboard ? void 0 : L(e2);
      }, K = function(e2) {
        return t2.value.noDrag ? void 0 : L(e2);
      }, I = function(e2) {
        e2.stopPropagation();
      }, q = e.computed(function() {
        return D2.draggedFiles ? D2.draggedFiles.length : 0;
      }), M = e.computed(function() {
        return q.value > 0 && function(e2) {
          var n3 = e2.files, t3 = e2.accept, r3 = e2.minSize, o2 = e2.maxSize, i2 = e2.multiple, a2 = e2.maxFiles;
          return !(!i2 && n3.length > 1 || i2 && a2 >= 1 && n3.length > a2) && n3.every(function(e3) {
            var n4 = d(e3, t3)[0], i3 = m(e3, r3, o2)[0];
            return n4 && i3;
          });
        }({ files: D2.draggedFiles, accept: t2.value.accept, minSize: t2.value.minSize, maxSize: t2.value.maxSize, multiple: t2.value.multiple, maxFiles: t2.value.maxFiles });
      }), $ = e.computed(function() {
        return q.value > 0 && !M.value;
      });
      return o(o({}, e.toRefs(D2)), { isDragAccept: M, isDragReject: $, isFocused: e.computed(function() {
        return D2.isFocused && !t2.value.disabled;
      }), getRootProps: function(e2) {
        void 0 === e2 && (e2 = {});
        var n3 = e2.onKeyDown, a2 = e2.onFocus, u2 = e2.onBlur, l2 = e2.onClick, c2 = e2.onDragEnter, s2 = e2.onDragenter, f2 = e2.onDragOver, v2 = e2.onDragover, p3 = e2.onDragLeave, g3 = e2.onDragleave, d2 = e2.onDrop, D3 = i(e2, ["onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragenter", "onDragOver", "onDragover", "onDragLeave", "onDragleave", "onDrop"]);
        return o(o({ onKeyDown: T(b(n3, x)), onFocus: T(b(a2, O)), onBlur: T(b(u2, A)), onClick: L(b(l2, z)), onDragenter: K(b(c2, s2, C)), onDragover: K(b(f2, v2, P)), onDragleave: K(b(p3, g3, R)), onDrop: K(b(d2, B)), ref: r2 }, t2.value.disabled || t2.value.noKeyboard ? {} : { tabIndex: 0 }), D3);
      }, getInputProps: function(e2) {
        void 0 === e2 && (e2 = {});
        var n3 = e2.onChange, r3 = e2.onClick, a2 = i(e2, ["onChange", "onClick"]), u2 = { accept: t2.value.accept, multiple: t2.value.multiple, style: "display: none", type: "file", onChange: L(b(n3, B)), onClick: L(b(r3, I)), autoComplete: "off", tabIndex: -1, ref: p2 };
        return o(o({}, u2), a2);
      }, rootRef: r2, inputRef: p2, open: L(w) });
    };
  }
});
export default require_index_common();
//# sourceMappingURL=vue3-dropzone.js.map
